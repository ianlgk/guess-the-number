{"version":3,"sources":["assets/refresh_icon.svg","App.js","index.js"],"names":["App","useState","input","setInput","undefined","number","setNumber","apiRequest","setApiRequest","message","setMessage","spanClass","setSpanClass","button","setButton","led","setLed","color","setColor","http","XMLHttpRequest","LEDNumber","position","parseInt","className","Display","id","length","onreadystatechange","readyState","DONE","status","console","log","responseText","JSON","parse","value","open","useEffect","send","spanClassName","numberColor","type","onClick","src","refresh_icon","alt","placeholder","onChange","e","target","disabled","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06b395d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/refresh_icon.101c0cc4.svg\";","import { useState, useEffect } from 'react';\nimport './App.css';\nimport refresh_icon from './assets/refresh_icon.svg';\n\nfunction App() {\n  // Estado para gerenciar o palpite do número\n  const [input, setInput] = useState('');\n  // Estado para gerenciar o número a ser advinhado\n  const [number, setNumber] = useState(undefined);\n  // Estado para gerenciar quando fazer ou refazer o request para a API\n  const [apiRequest, setApiRequest] = useState(true)\n  // Estado para gerenciar a mensagem de feedback para o usuário\n  const [message, setMessage] = useState('invisible');\n  // Estado para gerenciar a classe do span de mensagem\n  const [spanClass, setSpanClass] = useState('invisible');\n  // Estado para gerenciar o botão 'nova partida'\n  const [button, setButton] = useState(false);\n  // Estado para gerenciar o valor exibido no painel de LED\n  const [led, setLed] = useState('0');\n  // Estado para gerenciar a cor dos números exibidos no painel de LED\n  const [color, setColor] = useState('');\n\n  // Configuração do XMLHTTP e do que fazer quando obtém a resposta, uma vez que não posso usar a biblioteca 'axios'\n  const http = new XMLHttpRequest();\n  http.onreadystatechange = function () {\n    if (http.readyState === XMLHttpRequest.DONE) {\n      if (http.status === 200) {\n        if (number === undefined) {\n          console.log(http.responseText);\n          setNumber(JSON.parse(http.responseText).value);\n        }\n      } else {\n        setNumber(http.status);\n        setLed('502');\n        setMessage('ERRO');\n        setButton(true);\n      }\n    }\n  }\n\n  // Requisição pelo link informado no PDF\n  http.open('GET', 'https://us-central1-ss-devops.cloudfunctions.net/rand?min=1&max=300', true);\n\n  // Chamada da requisição ao renderizar o componente, executa quando o estado da 'button' é alterado\n  useEffect(() => {\n    if (apiRequest === true) {\n      http.send();\n      setApiRequest(false);\n      setButton(false);\n    }\n  // desativado para evitar warning no console\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [apiRequest]);\n\n  // Hook para atualizar a classe do span e cor do número do led que gerencia o feedback para o usuário,\n  // executa quando o estado da 'message' é alterado\n  useEffect(() => {\n    let spanClassName = '';\n    let numberColor = '';\n    switch (message) {\n      case 'Acertou!!!!':\n        spanClassName = 'sucess';\n        numberColor = 'sucess';\n        break;\n      case 'ERRO':\n        spanClassName = 'error';\n        numberColor = 'error';\n        break;\n      case 'Valor Inválido':\n        spanClassName = 'error';\n        numberColor = 'error';\n        break;\n      case 'invisible':\n        spanClassName = 'invisible';\n        break;\n      default:\n        spanClassName = 'normal';\n        break;\n    }\n    setSpanClass(spanClassName);\n    setColor(numberColor);\n  }, [message]);\n\n  // Função chamada quando clica no botão \"ENVIAR\"\n  function handleTryNumber() {\n    // Verifica se o input é válido e qual o status será exibido para o usuário\n    if (parseInt(input) >= 0 && parseInt(input) < 1000 && input.indexOf('-') === -1) {\n      if (parseInt(input) === number) {\n        setMessage('Acertou!!!!');\n        setButton(true);\n      } else if (parseInt(input) >= number) {\n        setMessage('É menor');\n      } else if (parseInt(input) <= number) {\n        setMessage('É maior');\n      }\n      // Atualiza o valor que aparece no LED\n      setLed(input);\n    }\n\n    // Reseta o input\n    setInput('');\n  }\n\n  // Componente que representa os segmentos do número exibido no painel de LED, colorido de acordo com o feedback do sistema (error, sucess)\n  // e o valor do número, para manter a mesma cor de fundo do painel de LED, visto que ela é definida pela diminuição da opacidade da borda\n  function LEDNumber({ position }) {\n    switch (parseInt(led[position])) {\n      case 0:\n        return (\n          <>\n            <div className={`segment-x segment-a ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-b ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-e ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-f ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-g`}><span className={`segment-border`}></span></div>\n          </>\n        );\n      case 1:\n        return (\n          <>\n            <div className={`segment-x segment-a`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-b ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-e`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-f`}><span className={`segment-border`}></span></div>\n            <div className={`segment-x segment-g`}><span className={`segment-border`}></span></div>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <div className={`segment-x segment-a ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-b ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-c`}><span className={`segment-border`}></span></div>\n            <div className={`segment-x segment-d ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-e ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-f`}><span className={`segment-border`}></span></div>\n            <div className={`segment-x segment-g ${color}`}><span className={`segment-border ${color}`}></span></div>\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <div className={`segment-x segment-a ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-b ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-e`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-f`}><span className={`segment-border`}></span></div>\n            <div className={`segment-x segment-g ${color}`}><span className={`segment-border ${color}`}></span></div>\n          </>\n        );\n      case 4:\n        return (\n          <>\n            <div className={`segment-x segment-a`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-b ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-e`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-f ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-g ${color}`}><span className={`segment-border ${color}`}></span></div>\n          </>\n        );\n      case 5:\n        return (\n          <>\n            <div className={`segment-x segment-a ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-b`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-e`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-f ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-g ${color}`}><span className={`segment-border ${color}`}></span></div>\n          </>\n        );\n      case 6:\n        return (\n          <>\n            <div className={`segment-x segment-a ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-b`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-e ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-f ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-g ${color}`}><span className={`segment-border ${color}`}></span></div>\n          </>\n        );\n      case 7:\n        return (\n          <>\n            <div className={`segment-x segment-a ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-b ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-e`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-f`}><span className={`segment-border`}></span></div>\n            <div className={`segment-x segment-g`}><span className={`segment-border`}></span></div>\n          </>\n        );\n      case 8:\n        return (\n          <>\n            <div className={`segment-x segment-a ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-b ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-e ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-f ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-g ${color}`}><span className={`segment-border ${color}`}></span></div>\n          </>\n        );\n      case 9:\n        return (\n          <>\n            <div className={`segment-x segment-a ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-b ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-c ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-d ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-y segment-e`}><span className={`segment-border`}></span></div>\n            <div className={`segment-y segment-f ${color}`}><span className={`segment-border ${color}`}></span></div>\n            <div className={`segment-x segment-g ${color}`}><span className={`segment-border ${color}`}></span></div>\n          </>\n        );\n      default:\n        return (\n          <>\n            <div className=\"segment-x segment-a\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-y segment-b\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-y segment-c\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-x segment-d\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-y segment-e\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-y segment-f\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-x segment-g\"><span className=\"segment-border\"></span></div>\n          </>\n        );\n    }\n  }\n\n  // Componente 'display' que é o display dos números de LED\n  // A lógica utilizada foi criar um componente exclusivo para tratar o caso do display, caso o valor seja 502, ou seja, erro na request\n  // ele retorna a estrutura que printará o valor 502, no entanto, quando o valor no painel for menor que 999 e maior que -1\n  // ele retorna a estrutura que irá aprensetar o valor printado em formatado de LED, utilizando de arestas com bordas configuradas\n  // e cada aresta tem uma classe de acordo com o algarismo que deve ser printado (0 - 9), além disso, de acordo com o tamanho da string\n  // digitada, ou seja, o número de caracteres digitados pelo usuário, ele varia a quantidade de algarismos, variando de 1 a 3 algarismos\n  // para que seja mais compreensível a lógica de design, acesse o arquivo App.css\n  function Display() {\n    if (parseInt(number) === 502) {\n      return (\n        <div id=\"display\">\n          <div className=\"number-container number-size number-no-5\">\n            <div className=\"segment-x segment-a error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-b\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-y segment-c error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-x segment-d error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-e\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-y segment-f error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-x segment-g error\"><span className=\"segment-border error\"></span></div>\n          </div>\n          <div className=\"number-container number-size number-no-0\">\n            <div className=\"segment-x segment-a error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-b error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-c error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-x segment-d error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-e error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-f error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-x segment-g\"><span className=\"segment-border\"></span></div>\n          </div>\n          <div className=\"number-container number-size number-no-2\">\n            <div className=\"segment-x segment-a error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-b error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-c\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-x segment-d error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-e error\"><span className=\"segment-border error\"></span></div>\n            <div className=\"segment-y segment-f\"><span className=\"segment-border\"></span></div>\n            <div className=\"segment-x segment-g error\"><span className=\"segment-border error\"></span></div>\n          </div>\n        </div>\n      );\n    }\n\n    switch (led.length) {\n      case 1:\n        return (\n          <div id=\"display\">\n            <div className={`number-container number-size number-no-${led[0]}`}>\n              <LEDNumber position={0} />\n            </div>\n          </div>\n        );\n      case 2:\n        return (\n          <div id=\"display\">\n            <div className={`number-container number-size number-no-${led[0]}`}>\n              <LEDNumber position={0} />\n            </div>\n            <div className={`number-container number-size number-no-${led[1]}`}>\n              <LEDNumber position={1} />\n            </div>\n          </div>\n        );\n      case 3:\n        return (\n          <div id=\"display\">\n            <div className={`number-container number-size number-no-${led[0]}`}>\n              <LEDNumber position={0} />\n            </div>\n            <div className={`number-container number-size number-no-${led[1]}`}>\n              <LEDNumber position={1} />\n            </div>\n            <div className={`number-container number-size number-no-${led[2]}`}>\n              <LEDNumber position={2} />\n            </div>\n          </div>\n        );\n      default:\n        return (\n          <div id=\"display\">\n            <div className=\"number-container number-size number-no-0\">\n              <LEDNumber position={0} />\n            </div>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"column\">\n        <div className=\"header\">\n          <h1>QUAL É O NÚMERO?</h1>\n          <hr />\n        </div>\n        <div className=\"led-display\">\n            <span \n              className={spanClass}\n            >\n              {message}\n            </span>\n            <Display />\n            <button\n              type=\"button\"\n              className={(button) ? \"btnReSubmit\" : \"btnReSubmit invisible\"}\n              onClick={() => {\n                  if (button) {\n                    setNumber(undefined);\n                    setMessage('invisible');\n                    setApiRequest(true);\n                    setLed('0');\n                  }\n                }\n              }\n            >\n              <img src={refresh_icon} alt=\"Icon\" />\n              NOVA PARTIDA\n            </button>\n          </div>\n        <div className=\"data-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Digite o palpite\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            disabled={(message === 'ERRO' || message === 'Acertou!!!!' || message === 'Valor Inválido') ? true : false }\n            className={(message === 'ERRO' || message === 'Acertou!!!!' || message === 'Valor Inválido') ? \"inputDisabled\" : \"\" }\n          />\n          <button\n            type=\"button\"\n            onClick={() => {\n                handleTryNumber();\n              }\n            }\n            disabled={(message === 'ERRO' || message === 'Acertou!!!!' || message === 'Valor Inválido') ? true : false }\n            className={(message === 'ERRO' || message === 'Acertou!!!!' || message === 'Valor Inválido') ? \"buttonDisabled\" : \"btnSubmit\" }\n          >\n            ENVIAR\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}